-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module Api.Scalar exposing (Codecs, Datetime(..), Upload(..), defaultCodecs, defineCodecs, unwrapCodecs, unwrapEncoder)

import Graphql.Codec exposing (Codec)
import Graphql.Internal.Builder.Object as Object
import Graphql.Internal.Encode
import Json.Decode as Decode exposing (Decoder)
import Json.Encode as Encode


type Datetime
    = Datetime String


type Upload
    = Upload String


defineCodecs :
    { codecDatetime : Codec valueDatetime
    , codecUpload : Codec valueUpload
    }
    -> Codecs valueDatetime valueUpload
defineCodecs definitions =
    Codecs definitions


unwrapCodecs :
    Codecs valueDatetime valueUpload
    ->
        { codecDatetime : Codec valueDatetime
        , codecUpload : Codec valueUpload
        }
unwrapCodecs (Codecs unwrappedCodecs) =
    unwrappedCodecs


unwrapEncoder getter (Codecs unwrappedCodecs) =
    (unwrappedCodecs |> getter |> .encoder) >> Graphql.Internal.Encode.fromJson


type Codecs valueDatetime valueUpload
    = Codecs (RawCodecs valueDatetime valueUpload)


type alias RawCodecs valueDatetime valueUpload =
    { codecDatetime : Codec valueDatetime
    , codecUpload : Codec valueUpload
    }


defaultCodecs : RawCodecs Datetime Upload
defaultCodecs =
    { codecDatetime =
        { encoder = \(Datetime raw) -> Encode.string raw
        , decoder = Object.scalarDecoder |> Decode.map Datetime
        }
    , codecUpload =
        { encoder = \(Upload raw) -> Encode.string raw
        , decoder = Object.scalarDecoder |> Decode.map Upload
        }
    }
